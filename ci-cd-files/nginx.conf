events {}

http {
    # Логи для отладки
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log debug;

    # Внешний сервер на порту 80: редирект на HTTPS только для nutromind.ru
    server {
        listen 80;
        server_name nutromind.ru;
        return 301 https://$host$request_uri;
    }

    # Внутренний сервер для проксирования LLM-запросов
    server {
        listen 80 default_server;  # Перехват всех запросов на порт 80, не связанных с nutromind.ru
        server_name _;

        location /openai/v1/ {
            proxy_pass https://api.proxyapi.ru/openai/v1/;
            proxy_set_header Host api.proxyapi.ru;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
        }

        location /yandex/foundationModels/v1/ {
            proxy_pass https://llm.api.cloud.yandex.net/foundationModels/v1/;
            proxy_set_header Host llm.api.cloud.yandex.net;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_connect_timeout 10s;
            proxy_read_timeout 60s;
            proxy_send_timeout 60s;
        }

        # Для отладки: логировать все необработанные запросы
        location / {
            return 404;
        }
    }

    # Внешний сервер на порту 443: проксирование к бэкенду
    server {
        listen 443 ssl;
        server_name nutromind.ru;

        ssl_certificate /etc/nginx/certs/fullchain.pem;
        ssl_certificate_key /etc/nginx/certs/privkey.pem;

        location / {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}